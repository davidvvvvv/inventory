{"version":3,"sources":["firebase_.js","loginContext.js","loginForm.js","listgroup.js","inputForm.js","nfc.js","returnForm.js","switch_page.js","mainPage.js","App.js","index.js"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","googleProvider","firestore","GoogleAuthProvider","setCustomParameters","hd","getFormatToday","today","Date","getFullYear","getMonth","getDate","ye","Intl","DateTimeFormat","year","format","mo","month","da","day","LoginContext","createContext","LoginContextProvider","props","useState","login","setLogin","useEffect","console","log","unsubscribe","onAuthStateChanged","userAuth","Provider","value","children","LoginForm","useContext","pwLoginWaiting","setPwLoginWaiting","googleLoginWaiting","setGoogleLoginWaiting","showMessageBox","setShowMessageBox","email","setEmail","password","setPassword","error","setError","navigate","inputChange","event","currentTarget","name","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Image","src","Segment","Button","loading","fluid","size","onClick","signInWithPopup","message","Divider","horizontal","Form","Input","icon","iconPosition","placeholder","onChange","type","signInWithEmailAndPassword","emailPwSignIn","Message","negative","visibility","createData","calories","fat","carbs","protein","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","title","flex","EnhancedTableToolbar","classes","numSelected","selected","removeItem","deleteSelected","Toolbar","className","clsx","Typography","variant","component","id","align","Tooltip","IconButton","aria-label","keys","forEach","item","tableStyles","container","display","flexDirection","table","visuallyHidden","border","clip","margin","overflow","padding","position","top","width","ListGroup","itemsMap","itemsList","values","React","dense","Map","setSelected","delete","TableContainer","Table","aria-labelledby","TableBody","map","row","index","isItemSelected","refno","has","labelId","TableRow","hover","set","handleClick","role","aria-checked","tabIndex","key","TableCell","Checkbox","checked","inputProps","scope","useStyles","minHeight","submitButton","marginTop","marginBottom","InputForm","ListGroupMemo","useRef","memo","setItemsMap","errorMessage","setErrorMessage","errorMessageVisible","setErrorMessageVisible","useCallback","addItem","dataString","tempArray","split","tempObject","setMessage","window","reader","NDEFReader","scan","decoder","TextDecoder","onreading","decode","records","data","readTag","todayDate","initObject","borrowerName","location","itemType","itemInput","selectBorrowDate","predictReturnDate","submitObject","setSubmitObject","selectLocation","setSelectLocation","selectType","setSelectType","useFetch","get","response","post","fetchPath","a","initSelectData","ok","initSelect","Snackbar","open","autoHideDuration","onClose","SnackbarContent","fontSize","gutterBottom","xs","TextField","label","fullWidth","required","Autocomplete","freeSolo","options","sLocation","onInputChange","target","renderInput","params","utils","DateFnsUtils","DatePicker","autoOk","disableFuture","arg","disablePast","innerText","direction","justify","alignItems","ReturnForm","TabPanel","other","hidden","Box","a11yProps","background","paper","toolbar","justifyContent","SwitchPage","setValue","AppBar","Tabs","newValue","Tab","MainPage","path","App","CssBaseline","Helmet","charSet","content","rel","href","styleLink","document","createElement","head","appendChild","rootElement","getElementById","ReactDOM","render"],"mappings":"gQAeKA,IAASC,KAAKC,QACjBF,IAASG,cAZY,CACrBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,8CAQF,IAAMC,EAAOX,IAASW,OAGvBC,GAFmBZ,IAASa,YAEX,IAAIb,IAASW,KAAKG,oBACzCF,EAAeG,oBAAoB,CACjCC,GAAI,mBAQC,IA0FMC,EAAiB,KAC5B,IAAMC,EAAQ,IAAIC,KAAK,IAAIA,MAAK,IAAIA,MAAOC,eAAe,IAAID,MAAOE,YAAY,IAAIF,MAAOG,YACtFC,EAAK,IAAIC,KAAKC,eAAe,KAAM,CAAEC,KAAM,YAAaC,OAAOT,GAC/DU,EAAK,IAAIJ,KAAKC,eAAe,KAAM,CAAEI,MAAO,YAAaF,OAAOT,GAChEY,EAAK,IAAIN,KAAKC,eAAe,KAAM,CAAEM,IAAK,YAAaJ,OAAOT,GACpE,MAAM,GAAN,OAAUK,EAAV,YAAgBK,EAAhB,YAAsBE,IC5HXE,EAAeC,0BAkEbC,EAhEcC,IAAU,IAAD,EACVC,mBAAS,MADC,mBAC7BC,EAD6B,KACtBC,EADsB,KAuDpC,OATAC,oBAAU,KACRC,QAAQC,IAAI,0BACZ,IAAMC,EA5CC/B,EAAKgC,mBAAmBC,IACzBA,GACFJ,QAAQC,IAAI,yBAWZH,EAASM,KAITJ,QAAQC,IAAI,6BACZH,EAAS,SA2Bb,MAAO,KACLI,IACAF,QAAQC,IAAI,wCAEb,IAGD,6BACE,kBAACT,EAAaa,SAAd,CAAuBC,MAAO,CAACT,EAAOC,IACnCH,EAAMY,Y,gFCiEAC,EAjHG,KAAO,IAAD,EACIC,qBAAWjB,GADf,mBACfK,EADe,aAEsBD,oBAAS,IAF/B,mBAEfc,EAFe,KAECC,EAFD,OAG8Bf,oBAAS,GAHvC,mBAGfgB,EAHe,KAGKC,EAHL,OAIqBjB,mBAAS,UAJ9B,mBAIfkB,EAJe,KAIAC,EAJA,OAKInB,mBAAS,IALb,mBAKfoB,EALe,KAKRC,EALQ,OAMUrB,mBAAS,IANnB,mBAMfsB,EANe,KAMLC,EANK,OAOIvB,mBAAS,IAPb,mBAOfwB,EAPe,KAORC,EAPQ,KAStBtB,oBAAU,KACRC,QAAQC,IAAI,uBACRJ,GAAOyB,YAAS,YACpB,CAACzB,IAEH,IAkBM0B,EAAcC,IAAU,IAAD,EACHA,EAAMC,cAAtBC,EADmB,EACnBA,KAAMpB,EADa,EACbA,MACd,OAAQoB,GACN,IAAK,QACHT,EAASX,GAET,MACF,IAAK,WACHa,EAAYb,GAEZ,MACF,QACEN,QAAQC,IAAI,sCAkBlB,OACE,kBAAC0B,EAAA,EAAD,CAAMC,UAAU,SAASC,MAAO,CAAEC,OAAQ,SAAWC,cAAc,UACjE,kBAACJ,EAAA,EAAKK,OAAN,CAAaH,MAAO,CAAEI,SAAU,MAC9B,kBAACC,EAAA,EAAD,CAAQC,GAAG,KAAKC,MAAM,OAAOR,UAAU,UACrC,kBAACS,EAAA,EAAD,CAAOC,IAAI,cADb,iEAGA,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,cAAY,CAAEC,QAAS7B,GAAvB,CAA6CwB,MAAM,WAAWM,OAAK,EAACC,KAAK,QAAQC,QApBrE,KAElB/B,GAAsB,GACtBE,EAAkB,UAClB,IFnCK5C,EAAK0E,gBAAgBzE,GEqCxB,MAAOgD,GACPC,EAASD,EAAM0B,SACfjC,GAAsB,GACtBE,EAAkB,eAWd,mDAIF,kBAACgC,EAAA,EAAD,CAASC,YAAU,GAAnB,UACA,kBAACC,EAAA,EAAD,CAAMN,KAAK,SACT,kBAACJ,EAAA,EAAD,KACE,kBAACU,EAAA,EAAKC,MAAN,CACER,OAAK,EACLS,KAAK,OACLC,aAAa,OACbC,YAAY,2BACZ3B,KAAK,QACL4B,SAAU/B,IAEZ,kBAAC0B,EAAA,EAAKC,MAAN,CACER,OAAK,EACLS,KAAK,OACLC,aAAa,OACbC,YAAY,eACZ3B,KAAK,WACL6B,KAAK,WACLD,SAAU/B,IAEZ,kBAACiB,EAAA,EAAD,eACEJ,MAAM,QACF,CAAEK,QAAS/B,GAFjB,CAGEgC,OAAK,EACLC,KAAK,QACLC,QApFI,KACd,GAAgB,KAAV5B,GAA6B,KAAbE,EAAkB,CACtCP,GAAkB,GAClB,IFQuB,EAACK,EAAOE,KAC5B/C,EAAKqF,2BAA2BxC,EAAOE,IERzCuC,CAAczC,EAAOE,GACpBH,EAAkB,UAClB,MAAOK,GAEPC,EAASD,EAAM0B,SACfnC,GAAkB,GAClBI,EAAkB,iBAGpBM,EAAS,8CACTN,EAAkB,cAiEZ,uCAOS,OAKb,kBAAC2C,EAAA,EAAD,CAASC,UAAQ,EAAC9B,MAAO,CAAC+B,WAAW9C,IAClCM,M,4LCvGX,SAASyC,EAAWnC,EAAMoC,EAAUC,EAAKC,EAAOC,GAC5C,MAAO,CAAEvC,OAAMoC,WAAUC,MAAKC,QAAOC,WAIrCJ,EAAW,UAAW,IAAK,IAAK,GAAI,KACpCA,EAAW,QAAS,IAAK,GAAM,GAAI,KACnCA,EAAW,SAAU,IAAK,GAAM,GAAI,GACpCA,EAAW,iBAAkB,IAAK,EAAK,GAAI,GAC3CA,EAAW,cAAe,IAAK,GAAM,GAAI,KAL7C,IAQMK,EAAmBC,YAAYC,IAAD,CAChCC,KAAM,CACFC,YAAaF,EAAMG,QAAQ,GAC3BC,aAAcJ,EAAMG,QAAQ,IAEhCE,UAC2B,UAAvBL,EAAMM,QAAQnB,KACR,CACEnB,MAAOgC,EAAMM,QAAQC,UAAUC,KAC/BC,gBAAiBC,YAAQV,EAAMM,QAAQC,UAAUI,MAAO,MAE1D,CACE3C,MAAOgC,EAAMM,QAAQM,KAAKC,QAC1BJ,gBAAiBT,EAAMM,QAAQC,UAAUO,MAErDC,MAAO,CACHC,KAAM,eAIRC,EAAwB1F,IAC1B,IAAM2F,EAAUpB,IACRqB,EAAmD5F,EAAnD4F,YAAYC,EAAuC7F,EAAvC6F,SAASC,EAA8B9F,EAA9B8F,WAAWC,EAAmB/F,EAAnB+F,eAUxC,OACI,kBAACC,EAAA,EAAD,CACIC,UAAWC,YAAKP,EAAQjB,KAAM,CAC1B,CAACiB,EAAQb,WAAYc,EAAc,KAGtCA,EAAc,EACX,kBAACO,EAAA,EAAD,CACIF,UAAWN,EAAQH,MACnB/C,MAAM,UACN2D,QAAQ,YACRC,UAAU,OAETT,EANL,aASI,kBAACO,EAAA,EAAD,CACIF,UAAWN,EAAQH,MACnBY,QAAQ,KACRE,GAAG,aACHD,UAAU,MACVE,MAAM,SACN9D,MAAM,WANV,kCAYPmD,EAAc,EACX,kBAACY,EAAA,EAAD,CAAShB,MAAM,UACX,kBAACiB,EAAA,EAAD,CAAYC,aAAW,SAASzD,QAtC7B,KACH,IAAI4C,EAASc,QACnBC,QAASC,IACXf,EAAWe,GACXd,EAAec,OAmCH,kBAAC,IAAD,QAIJ,kBAACL,EAAA,EAAD,CAAShB,MAAM,eACX,kBAACiB,EAAA,EAAD,CAAYC,aAAW,eACnB,kBAAC,IAAD,UAYtBI,EAActC,YAAYC,IAAD,CAC3BsC,UAAW,CACPC,QAAS,OACTC,cAAe,SACf9E,OAAO,QAEX+E,MAAO,GAGPC,eAAgB,CACZC,OAAQ,EACRC,KAAM,gBACNlF,OAAQ,EACRmF,QAAS,EACTC,SAAU,SACVC,QAAS,EACTC,SAAU,WACVC,IAAK,GACLC,MAAO,GAEXjD,KAAM,CACFsC,QAAS,OACTC,cAAe,SACf9E,OAAO,WAIA,SAASyF,EAAU5H,GAAQ,IAE/B6H,EAAsB7H,EAAtB6H,SAAS/B,EAAa9F,EAAb8F,WACVgC,EAAU,IAAID,EAASE,UACvBpC,EAAUmB,IAJqB,EAMXkB,IAAM/H,UAAS,GANJ,mBAM9BgI,EAN8B,aAORD,IAAM/H,SAAS,IAAIiI,MAPX,mBAO9BrC,EAP8B,KAOrBsC,EAPqB,KA8B/BpC,EAAkBhE,IAChB8D,EAASuC,OAAOrG,IAAOoG,EAAY,IAAID,IAAIrC,KAcnD,OACI,yBAAKI,UAAWN,EAAQjB,MACpB,kBAACgB,EAAD,CAAsBE,YAAaC,EAAS7C,KAAM6C,SAAUA,EAAUC,WAAYA,EAAYC,eAAgBA,IAC9G,kBAACsC,EAAA,EAAD,CAAgBpC,UAAWN,EAAQoB,WAC/B,kBAACuB,EAAA,EAAD,CACIrC,UAAWN,EAAQuB,MACnBqB,kBAAgB,aAChBvF,KAAMiF,EAAQ,QAAU,SACxBvB,aAAW,kBAEX,kBAAC8B,EAAA,EAAD,KACKV,EAAUW,IAAI,CAACC,EAAKC,KACjB,IAdJ5G,EAcU6G,GAdV7G,EAcsC2G,EAAIG,MAdjChD,EAASiD,IAAI/G,IAeZgH,EAAO,kCAA8BJ,GAE3C,OACI,kBAACK,EAAA,EAAD,CACIC,OAAK,EACLhG,QAAUpB,GA7BtB,EAACA,EAAME,KACvB8D,EAASiD,IAAI/G,GAAQgE,EAAehE,GAAQoG,EAAY,IAAID,IAAIrC,EAASqD,IAAInH,MA4B7BoH,CAAYtH,EAAO6G,EAAIG,OAC3CO,KAAK,WACLC,eAAcT,EACdU,UAAW,EACXC,IAAKb,EAAIG,MAAMH,EAAI9E,KACnBiC,SAAU+C,GAEV,kBAACY,EAAA,EAAD,CAAWhC,QAAQ,YACf,kBAACiC,EAAA,EAAD,CACIC,QAASd,EACTe,WAAY,CAAE,kBAAmBZ,MAGzC,kBAACS,EAAA,EAAD,CACInD,UAAU,KACVC,GAAIyC,EACJa,MAAM,MACNpC,QAAQ,QAEPkB,EAAIG,OAET,kBAACW,EAAA,EAAD,CAAWjD,MAAM,SAASmC,EAAI9E,a,yHC5L5DiG,GAAYrF,YAAYC,IAAD,CAC3BC,KAAM,CACJC,YAAaF,EAAMG,QAAQ,GAC3BC,aAAcJ,EAAMG,QAAQ,GAC5BzC,OAAQ,OACR2H,UAAW,OACX9C,QAAS,OACTC,cAAe,UAKjB8C,aAAc,CACZC,UAAWvF,EAAMG,QAAQ,GACzBqF,aAAcxF,EAAMG,QAAQ,GAC5B+C,MAAO,WAqSIuC,GAhSG,KACIpL,IAApB,IADsB,EAGIgC,qBAAWjB,GAHf,mBAGfK,EAHe,aAIcD,mBAAS,KAJvB,gCAKYA,mBAAS,KALrB,mBAKf6H,EALe,KAahBqC,GAbgB,KAOHC,iBAAOtC,GAMNE,IAAMqC,KAAKzC,IAbT,EAeO3H,mBAAS,IAAIiI,KAfpB,mBAefL,EAfe,KAeNyC,EAfM,OAiBkBrK,mBAAS,IAjB3B,mBAiBfsK,EAjBe,KAiBDC,EAjBC,OAkBgCvK,oBAAS,GAlBzC,mBAkBfwK,EAlBe,KAkBMC,EAlBN,KAoBhBhJ,EAAWiJ,sBAAaxH,IAC5BqH,EAAgBrH,GAChBuH,GAAuB,IACtB,IAiBGE,EAAWC,IASf,IAAMC,EAAYD,EAAWE,MAAM,KAC7BC,EAAa,CAAE,MAASF,EAAU,GAAI,KAAQA,EAAU,GAAI,KAAQ,GAAI,QAAW,IAGzFR,EAAY,IAAIpC,IAAIL,EAASqB,IAAI4B,EAAU,GAAGE,KAC9C3K,QAAQC,IAAIuH,IA6BD,MAAT3H,GAAeyB,YAAS,KAE5BvB,oBAAU,KACRC,QAAQC,IAAI,uBC5IO,EAAC2K,EAAWL,KAC/B,GAAI,eAAgBM,OAAQ,CAE1B,IAAMC,EAAS,IAAIC,WACnB,IACED,EAAOE,OACP,IAAMC,EAAU,IAAIC,YACpBJ,EAAOK,UAAY3J,IACjB+I,EAAQU,EAAQG,OAAO5J,EAAMsB,QAAQuI,QAAQ,GAAGC,QAElD,MAAMlK,GACNwJ,EAAWxJ,EAAM0B,eAGjB8H,EAAW,iED+HfW,CAAQlK,EAAUkJ,IACjB,IAeH,IAAMjF,EAAUkE,KACVgC,EAAY,IAAI7M,KAAK,IAAIA,MAAK,IAAIA,MAAOC,eAAe,IAAID,MAAOE,YAAY,IAAIF,MAAOG,YAG1F2M,EAAa,CAACC,aAAa,GAAGC,SAAS,GAAIC,SAAS,GAC1DC,UAAU,GAAGC,iBAAiBN,EAAUO,kBAAkBP,GA5GpC,EA8GiB5L,mBAAS6L,GA9G1B,mBA8GfO,EA9Ge,KA8GFC,EA9GE,KA+GOL,GAAuDI,EAA7EN,aAA6EM,EAAhEL,SAAgEK,EAAvDJ,UAASC,EAA8CG,EAA9CH,UAAUC,EAAoCE,EAApCF,iBAAiBC,EAAmBC,EAAnBD,kBA/G3C,EAgIsBnM,mBAAS,IAhI/B,mBAgIfsM,EAhIe,KAgICC,EAhID,OAiIcvM,mBAAS,IAjIvB,oBAiIfwM,GAjIe,MAiIHC,GAjIG,SAkI0BC,aAAS,KAAjDC,GAlIc,GAkIdA,IAAWC,IAlIG,GAkITC,KAlIS,GAkIHD,UAlIG,OAkIO/J,QAlIP,GAkIgBrB,MACJxB,mBAAS,eAnIrB,qBAmIf8M,GAnIe,0DAwKtB,4BAAAC,EAAA,sEAC+BJ,GAAIG,IADnC,OACQE,EADR,OAEMJ,GAASK,KAEXV,EAAkBS,EAAejB,UACjCU,GAAcO,EAAerJ,OALjC,4CAxKsB,sBAsKtBxD,oBAAU,MAtKY,oCAsKJ+M,IAAgB,CAACJ,KA0BnC,OACE,yBAAK9G,UAAWN,EAAQjB,MACtB,yBAAKxC,MAAO,CAAE8E,QAAS,OAAQC,cAAe,WAE5C,kBAACmG,GAAA,EAAD,CAAUC,KAAM5C,EAAqB6C,iBAAkB,IAAMC,QAAS,KAAK7C,GAAuB,KAChG,kBAAC8C,GAAA,EAAD,CAAiBtL,MAAO,CAAEgD,gBAAiB,SAAUuI,SAAS,QAAUtK,QAASoH,KAGnF,kBAACpE,EAAA,EAAD,CAAYC,QAAQ,KAAKsH,cAAY,EAACjL,MAAM,WAA5C,kCAIA,kBAAC,IAAD,CAAMsE,WAAS,EAACnC,QAAS,GACvB,kBAAC,IAAD,CAAMiC,MAAI,EAAC8G,GAAI,GACb,kBAACC,EAAA,EAAD,CAAWjK,SAzEM,CAAC9B,EAAOlB,KAEjC2L,EAAgB,2BACXD,GADU,IAEbN,aAAapL,MAqEkCkN,MAAM,iCAAQvH,GAAG,WAAWgB,OAAO,OAAOwG,WAAS,EAACC,UAAQ,KAGvG,kBAAC,IAAD,CAAMlH,MAAI,EAAC8G,GAAI,GACb,kBAACK,GAAA,EAAD,CACE1H,GAAG,WACH2H,UAAQ,EACRC,QAAS3B,EAAe9D,IAAK0F,GAAcA,GAC3CC,cArEYvM,IAEtByK,EAAgB,2BACXD,GADU,IAEbL,SAASnK,EAAMwM,OAAO1N,UAkEd2N,YAAcC,GACZ,kBAACX,EAAA,EAAD,iBAAeW,EAAf,CAAuBV,MAAM,qBAInC,kBAAC,KAAD,CAAyBW,MAAOC,KAC9B,kBAAC,IAAD,CAAM5H,MAAI,EAAC8G,GAAI,GACb,kBAACe,GAAA,EAAD,CACEC,QAAM,EACNvI,QAAQ,SACRyH,MAAM,2BACNC,WAAS,EACTc,eAAa,EACbpP,OAAO,aACPmB,MAAOwL,EACPxI,SACGkL,GAAMvC,EAAgB,2BAAID,GAAL,IAAkBF,iBAAiB0C,QAI/D,kBAAC,IAAD,CAAMhI,MAAI,EAAC8G,GAAI,GACb,kBAACe,GAAA,EAAD,CACEC,QAAM,EACNvI,QAAQ,SACRyH,MAAM,uCACNrO,OAAO,aACPsO,WAAS,EACTgB,aAAW,EACXnO,MAAOyL,EACPzI,SACGkL,GAAMvC,EAAgB,2BAAID,GAAL,IAAkBD,kBAAkByC,SAKlE,kBAAC,IAAD,CAAMhI,MAAI,EAAC8G,GAAI,GACb,kBAACC,EAAA,EAAD,CAAWjK,SAhEM9B,IAEzByK,EAAgB,2BAAID,GAAL,IAAmBH,UAAUrK,EAAMwM,OAAO1N,UA8DTkN,MAAM,uCAASvH,GAAG,WAAWgB,OAAO,OAAOwG,WAAS,EAACC,UAAQ,KAGvG,kBAAC,IAAD,CAAMlH,MAAI,EAAC8G,GAAI,GACb,kBAACK,GAAA,EAAD,CACE1H,GAAG,WACH2H,UAAQ,EACRC,QAAWzB,GACX2B,cArGYvM,IAEtByK,EAAgB,2BACXD,GADU,IAEbJ,SAASpK,EAAMwM,OAAOU,WAAalN,EAAMwM,OAAO1N,UAkGxC2N,YAAcC,GACZ,kBAACX,EAAA,EAAD,iBAAeW,EAAf,CAAuBV,MAAM,2BAAOvG,OAAO,aAIjD,kBAAC,IAAD,CAAMT,MAAI,EAAC8G,GAAI,GACb,kBAAC,IAAD,CAAM5G,WAAS,EACbiI,UAAU,MACVC,QAAQ,eACRC,WAAW,UAEX,kBAACzI,EAAA,EAAD,CAAYxD,QA7FE,KACpBiJ,GAAaD,EAEfrB,EAAQ,GAAD,OAAIsB,EAAJ,YAAiBD,IAExBvK,EAAS,4FAwFuCe,MAAM,UAAUiE,aAAW,QACjE,kBAAC,KAAD,CAAS+G,SAAS,eAM5B,yBAAKvL,MAAO,CAAE8E,QAAS,OAAQC,cAAe,SAAUxB,KAAM,MAC5D,kBAAC0E,EAAD,CAAetC,SAAUA,EAAU/B,WAnPvByD,IACZ1B,EAASO,OAAOmB,IAAMe,EAAY,IAAIpC,IAAIL,QAoP5C,yBAAK3F,MAAO,CAAE8E,QAAS,OAAQC,cAAe,WAC5C,kBAAC,KAAD,CAAQb,QAAQ,YAAY3D,MAAM,UAAUwD,UAAWN,EAAQoE,aAAcnG,KAAK,UAAlF,mBEzUOuL,GAJE,IACR,kBAAC,KAAD,CAAQ1M,MAAM,WAAd,e,uECYT,SAAS2M,GAASpP,GAAQ,IACdY,EAAqCZ,EAArCY,SAAUD,EAA2BX,EAA3BW,MAAOgI,EAAoB3I,EAApB2I,MAAU0G,EADd,aACwBrP,EADxB,8BAGrB,OACI,uCACIoJ,KAAK,WACLkG,OAAQ3O,IAAUgI,EAClBrC,GAAE,0BAAqBqC,GACvBJ,kBAAA,qBAA+BI,IAC3B0G,GAEH1O,IAAUgI,GACP,kBAAC4G,GAAA,EAAD,KACK3O,IAarB,SAAS4O,GAAU7G,GACf,MAAO,CACHrC,GAAG,cAAD,OAAgBqC,GAClB,gBAAgB,mBAAhB,OAAoCA,IAI5C,IAAMkB,GAAYrF,YAAWC,IAAK,CAC9BC,KAAM,CACFvC,OAAQ,MACR+C,gBAAiBT,EAAMM,QAAQ0K,WAAWC,OAG9CC,QAAS,CACLC,eAAgB,oBAIT,SAASC,KACpB,IAAMlK,EAAUkE,KADiB,EAEP7B,IAAM/H,SAAS,GAFR,mBAE1BU,EAF0B,KAEnBmP,EAFmB,KASjC,OACI,yBAAK7J,UAAWN,EAAQjB,MACpB,kBAACqL,GAAA,EAAD,CAAQtI,SAAS,UACb,kBAACzB,EAAA,EAAD,CAASC,UAAWN,EAAQgK,SACxB,kBAACK,GAAA,EAAD,CACIrP,MAAOA,EACPgD,SAXC,CAAC9B,EAAOoO,KAEzBH,EAASG,IAUOvJ,aAAW,QAEX,kBAACwJ,GAAA,EAAD,eAAKrC,MAAM,kCAAY2B,GAAU,KACjC,kBAACU,GAAA,EAAD,eAAKrC,MAAM,YAAe2B,GAAU,KACpC,kBAACU,GAAA,EAAD,eAAKrC,MAAM,cAAiB2B,GAAU,MAE1C,kBAAC,IAAD,CAAY9I,aAAW,WACnB,kBAAC,KAAD,SAIZ,kBAAC0I,GAAD,CAAUzO,MAAOA,EAAOgI,MAAO,GAC3B,kBAAC,GAAD,OAEJ,kBAACyG,GAAD,CAAUzO,MAAOA,EAAOgI,MAAO,GAA/B,YAGA,kBAACyG,GAAD,CAAUzO,MAAOA,EAAOgI,MAAO,GAA/B,eCrFZ,IAeewH,GAfEnQ,IAAU,IAAD,EACEc,qBAAWjB,GADb,6BAGxB,OACE,kBAAC,IAAD,KAGE,kBAAC,EAAD,CAAWuQ,KAAK,MAChB,kBAACP,GAAD,CAAYO,KAAK,YACjB,kBAAC,GAAD,CAAWA,KAAK,WAChB,kBAAC,GAAD,CAAYA,KAAK,c,oBCMRC,GAjBH,IAER,kBAACC,GAAA,EAAD,KACA,kBAAC,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,0BAAMC,QAAQ,UACd,0CACA,0BAAMzO,KAAK,WAAW0O,QAAQ,yDAC9B,0BAAMC,IAAI,aAAaC,KAAK,gFAC5B,0BAAMD,IAAI,aAAaC,KAAK,6DAE9B,kBAAC,GAAD,QCZAC,GAAYC,SAASC,cAAc,QACzCF,GAAUF,IAAM,aAChBE,GAAUD,KACR,iEACFE,SAASE,KAAKC,YAAYJ,IAE1B,IAAMK,GAAcJ,SAASK,eAAe,QAC5CC,IAASC,OAAO,kBAAC,GAAD,MAASH,M","file":"static/js/main.e3557306.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCT72ac9bDKa7miAtozx-erO2CLmdFnXEM\",\r\n  authDomain: \"mytesting-c9489.firebaseapp.com\",\r\n  databaseURL: \"https://mytesting-c9489.firebaseio.com\",\r\n  projectId: \"mytesting-c9489\",\r\n  storageBucket: \"mytesting-c9489.appspot.com\",\r\n  messagingSenderId: \"303860734763\",\r\n  appId: \"1:303860734763:web:9784fd9f8178f2c25d836e\"\r\n};\r\n\r\n// Initialize Firebase\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst googleProvider = new firebase.auth.GoogleAuthProvider();\r\ngoogleProvider.setCustomParameters({\r\n  hd: \"plkylmf.edu.hk\"\r\n});\r\n/*\r\ngoogleProvider.setCustomParameters({\r\n  prompt: 'select_account'\r\n});\r\n*/\r\n\r\nexport const loginWithGoogle = () => {\r\n  return auth.signInWithPopup(googleProvider);\r\n};\r\n\r\nexport const loginWithGoogleRedirect = () => {\r\n  return auth.signInWithRedirect(googleProvider);\r\n};\r\n\r\nexport const emailPwSignIn = (email, password) => {\r\n  return auth.signInWithEmailAndPassword(email, password);//.then(authCreditial=>{console.log(\"authCreditial \",authCreditial)})\r\n};\r\n\r\nexport const logoutAll = () => {\r\n  auth\r\n    .signOut()\r\n    .then(() => console.log(\"User has logout!\"))\r\n    .catch(error => {\r\n      console.log(\"logoutAll_error\", error);\r\n    });\r\n};\r\n\r\nexport const getLocationCol = col => {\r\n  const ref = firestore.collection(col);\r\n  return ref.orderBy('key', 'asc')\r\n    .get().then(querySnapshot => querySnapshot)\r\n    .catch(error => console.log(\"firebase_getLocationCol_error\", error.message));\r\n};\r\n\r\nexport const getTypeCol = col => {\r\n  const ref = firestore.collection(col);\r\n  return ref.orderBy('key', 'asc')\r\n    .get().then(querySnapshot => querySnapshot)\r\n    .catch(error => console.log(\"firebase_getTypeCol_error\", error.message));\r\n};\r\n\r\nexport const getDBDoc = (col, doc) => {\r\n  const ref = firestore.collection(col).doc(doc);\r\n  return ref\r\n    .get()\r\n    .catch(error => console.log(\"firebase_getDBDoc\", error.message));\r\n};\r\n\r\nexport const addRecord = (borrower, borrowDate, expectReturnDate, localion, itemList,setError) => {\r\n // const ref = firestore.collection('record').doc(); // doc() 沒有指定名稱\r\n  //console.log('auth.currentUser ',auth.currentUser);\r\n  itemList.forEach(element => {\r\n    if (element.dbRefNo) {\r\n      const ref2 = firestore.collection('record').doc(element.dbRefNo);\r\n      ref2.set({\r\n        return_date: new Date(getFormatToday()),\r\n        return_date_disapprove: true\r\n      }, { merge: true }).then(() => {\r\n        console.log('set new return_date successful');\r\n      }).catch(error => console.log(\"addRecord_set new return_date_error\", error.message));\r\n    }\r\n    firestore.collection('record').doc().set({\r\n      created_at: firebase.firestore.FieldValue.serverTimestamp(),\r\n      borrower,\r\n      borrow_date: borrowDate,\r\n      expect_return_date: expectReturnDate,\r\n      localion,\r\n      item_type: element.type,\r\n      item: element.refno,\r\n      return_date: new Date(\"9999/01/01\"),\r\n      user: auth.currentUser.email\r\n    }).then(() => {\r\n      console.log('addRecord successful');\r\n    }).catch(error => {\r\n      console.log(\"addRecord_error\", error.message);\r\n      setError(\"😫 錯誤 : error.message\");\r\n    });\r\n  });\r\n}\r\n\r\nexport const checkItemNotReturn = item => {\r\n  console.log('firebase_checkItemStatus');\r\n  const ref = firestore.collection('record');\r\n  return ref.where('item', '==', item).where('return_date', '>', new Date(\"3000/01/01\")).get()\r\n    .then(querySnapshot => {\r\n      return querySnapshot.docs.length > 0 ? [querySnapshot.docs[0].id, item, querySnapshot.docs[0].data()] : false;\r\n    });\r\n};\r\n\r\nexport const getFormatDate = (date) => {\r\n  const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(date)\r\n  const mo = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(date)\r\n  const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(date)\r\n  return `${ye}/${mo}/${da}`;\r\n}\r\n\r\nexport const getFormatToday = () => {\r\n  const today = new Date(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()));\r\n  const ye = new Intl.DateTimeFormat('en', { year: 'numeric' }).format(today)\r\n  const mo = new Intl.DateTimeFormat('en', { month: '2-digit' }).format(today)\r\n  const da = new Intl.DateTimeFormat('en', { day: '2-digit' }).format(today)\r\n  return `${ye}/${mo}/${da}`;\r\n}\r\n\r\n/*export const addRecord = async (username,borrowDate,expectReturnDate,location,itemArray,)\r\n\r\n/*\r\nauth.getRedirectResult().then(function(result) {\r\n  if (result.credential) {\r\n    // This gives you a Google Access Token.\r\n    console.log(\"accessToken \",result.credential.accessToken);\r\n    console.log(\"sign_in_method \",result.credential.signInMethod);\r\n    console.log(\"providerId \",result.credential.providerId);\r\n  }\r\n  if (result.additionalUserInfo){\r\n    console.log('isNewUser ',result.additionalUserInfo.isNewUser);\r\n  }\r\n});\r\n*/\r\n","import React, { useState, useEffect, createContext } from \"react\";\r\nimport { auth,firestore } from \"./firebase_\";\r\n\r\nexport const LoginContext = createContext();\r\n\r\nconst LoginContextProvider = props => {\r\n  const [login, setLogin] = useState(null);\r\n\r\n  const ifAuthStateChange = () => {\r\n    return auth.onAuthStateChanged(userAuth => {\r\n      if (userAuth) {\r\n        console.log(\"The user is logged in\");\r\n        //console.log(await userAuth.getIdToken());\r\n        /*\r\n        userAuth.providerData.forEach(function (profile) {\r\n          console.log(\"Sign-in provider: \" + profile.providerId);\r\n          console.log(\"  Provider-specific UID: \" + profile.uid);\r\n          console.log(\"  Name: \" + profile.displayName);\r\n          console.log(\"  Email: \" + profile.email);\r\n          console.log(\"  Photo URL: \" + profile.photoURL);\r\n        });\r\n        */\r\n        setLogin(userAuth);\r\n        //console.log('userAuth ',userAuth);\r\n        //console.log('auth.currentUser ',auth.currentUser);\r\n      } else {\r\n        console.log(\"The user is not logged in\");\r\n        setLogin(null);\r\n      }\r\n    });\r\n  };\r\n\r\n  /*\r\n  const validAccountCheck = ()=>{\r\n    const user=auth.currentUser;\r\n    firestore.collection('users').doc(user.uid).set({\r\n      name:user.displayName,\r\n      email:user.email,\r\n      photoURL: user.photoURL\r\n    },{\r\n      merge:true\r\n    }).then(()=>{\r\n      console.log(\"firebase_validAcccountCheck_return_true\");\r\n      setLogin(user);\r\n      //return true;\r\n    }).catch((error)=>{\r\n      console.log(\"firebase_validAcccountCheck_return_false\",error.message)\r\n     //return false;\r\n    })\r\n  }\r\n */\r\n  useEffect(() => {\r\n    console.log(\"loginContext_useEffect\");\r\n    const unsubscribe = ifAuthStateChange();\r\n    return () => {\r\n      unsubscribe();\r\n      console.log(\"loginContext_useEffect_unsubscribe\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <LoginContext.Provider value={[login, setLogin]}>\r\n        {props.children}\r\n      </LoginContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginContextProvider;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { LoginContext } from \"./loginContext\";\r\nimport { loginWithGoogle, loginWithGoogleRedirect, logoutAll, emailPwSignIn } from \"./firebase_\";\r\nimport { navigate } from \"@reach/router\";\r\nimport {\r\n  Button,\r\n  Form,\r\n  Grid,\r\n  Header,\r\n  Image,\r\n  Message,\r\n  Segment,\r\n  Divider\r\n} from \"semantic-ui-react\";\r\n\r\nconst LoginForm = () => {\r\n  const [login, setLogin] = useContext(LoginContext);\r\n  const [pwLoginWaiting, setPwLoginWaiting] = useState(false);\r\n  const [googleLoginWaiting, setGoogleLoginWaiting] = useState(false);\r\n  const [showMessageBox,setShowMessageBox] = useState(\"hidden\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"loginForm_useEffect\");\r\n    if (login) navigate(\"/switch\");\r\n  },[login]);\r\n\r\n  const pwLogin = () => {\r\n    if (!(email === \"\" || password === \"\")) {\r\n      setPwLoginWaiting(true);\r\n      try {\r\n       emailPwSignIn(email, password);\r\n        setShowMessageBox(\"hidden\");\r\n      } catch (error) {\r\n        //console.log(\"loginForm_pwLogin_error.message\",error.message);\r\n        setError(error.message);\r\n        setPwLoginWaiting(false);\r\n        setShowMessageBox(\"visible\");\r\n      }\r\n    }else{\r\n      setError(\"請輸入適當資料\");\r\n      setShowMessageBox(\"visible\");\r\n    }\r\n  };\r\n\r\n  const inputChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    switch (name) {\r\n      case \"email\":\r\n        setEmail(value);\r\n        //console.log(\"loginForm_email\", value);\r\n        break;\r\n      case \"password\":\r\n        setPassword(value);\r\n        //console.log(\"loginForm_password\", value);\r\n        break;\r\n      default:\r\n        console.log(\"loginForm can't found input type\");\r\n        break;\r\n    }\r\n  };\r\n\r\n  const googleLogin = () => {\r\n    //loginWithGoogle();\r\n    setGoogleLoginWaiting(true);\r\n    setShowMessageBox(\"hidden\");\r\n    try{\r\n     loginWithGoogle();\r\n    } catch (error){\r\n      setError(error.message);\r\n      setGoogleLoginWaiting(false);\r\n      setShowMessageBox(\"visible\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid textAlign=\"center\" style={{ height: \"100vh\" }} verticalAlign=\"middle\">\r\n      <Grid.Column style={{ maxWidth: 450 }}>\r\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\r\n          <Image src=\"/logo.png\" /> 余李慕芬簡易租借系統\r\n        </Header>\r\n        <Segment>\r\n          <Button {...{ loading: googleLoginWaiting }} color=\"facebook\" fluid size=\"large\" onClick={googleLogin}>\r\n            學校帳戶 - Google 登入\r\n          </Button>\r\n        </Segment>\r\n        <Divider horizontal>或</Divider>\r\n        <Form size=\"large\">\r\n          <Segment>\r\n            <Form.Input\r\n              fluid\r\n              icon=\"user\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"電子郵件\"\r\n              name=\"email\"\r\n              onChange={inputChange}\r\n            />\r\n            <Form.Input\r\n              fluid\r\n              icon=\"lock\"\r\n              iconPosition=\"left\"\r\n              placeholder=\"密碼\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              onChange={inputChange}\r\n            />\r\n            <Button\r\n              color=\"teal\"\r\n              {...{ loading: pwLoginWaiting }}\r\n              fluid\r\n              size=\"large\"\r\n              onClick={pwLogin}\r\n            >\r\n              臨時帳戶登入{\" \"}\r\n            </Button>\r\n\r\n          </Segment>\r\n        </Form>\r\n        <Message negative style={{visibility:showMessageBox}} >\r\n          {error}\r\n        </Message>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport clsx from \"clsx\";\r\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n    return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows2 = [\r\n    createData(\"Cupcake\", 305, 3.7, 67, 4.3),\r\n    createData(\"Donut\", 452, 25.0, 51, 4.9),\r\n    createData(\"Eclair\", 262, 16.0, 24, 6.0),\r\n    createData(\"Frozen yoghurt\", 159, 6.0, 24, 4.0),\r\n    createData(\"Gingerbread\", 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n    root: {\r\n        paddingLeft: theme.spacing(2),\r\n        paddingRight: theme.spacing(1)\r\n    },\r\n    highlight:\r\n        theme.palette.type === \"light\"\r\n            ? {\r\n                color: theme.palette.secondary.main,\r\n                backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n            }\r\n            : {\r\n                color: theme.palette.text.primary,\r\n                backgroundColor: theme.palette.secondary.dark\r\n            },\r\n    title: {\r\n        flex: \"1 1 100%\"\r\n    },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n    const classes = useToolbarStyles();\r\n    const { numSelected,selected,removeItem,deleteSelected } = props;\r\n\r\n    const deleteItem = () =>{\r\n        const items=[...selected.keys()];\r\n        items.forEach((item)=>{\r\n            removeItem(item);\r\n            deleteSelected(item);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Toolbar\r\n            className={clsx(classes.root, {\r\n                [classes.highlight]: numSelected > 0\r\n            })}\r\n        >\r\n            {numSelected > 0 ? (\r\n                <Typography\r\n                    className={classes.title}\r\n                    color=\"inherit\"\r\n                    variant=\"subtitle1\"\r\n                    component=\"div\"\r\n                >\r\n                    {numSelected} selected\r\n                </Typography>\r\n            ) : (\r\n                    <Typography\r\n                        className={classes.title}\r\n                        variant=\"h6\"\r\n                        id=\"tableTitle\"\r\n                        component=\"div\"\r\n                        align=\"center\"\r\n                        color=\"primary\"\r\n                    >\r\n                    租借物品表\r\n                    </Typography>\r\n                )}\r\n\r\n            {numSelected > 0 ? (\r\n                <Tooltip title=\"Delete\">\r\n                    <IconButton aria-label=\"delete\" onClick={deleteItem} >\r\n                        <DeleteIcon />\r\n                    </IconButton>\r\n                </Tooltip>\r\n            ) : (\r\n                    <Tooltip title=\"Filter list\">\r\n                        <IconButton aria-label=\"filter list\">\r\n                            <FilterListIcon />\r\n                        </IconButton>\r\n                    </Tooltip>\r\n                )}\r\n        </Toolbar>\r\n    );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n    numSelected: PropTypes.number.isRequired\r\n};\r\n\r\nconst tableStyles = makeStyles((theme) => ({\r\n    container: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height:'100%'\r\n    },\r\n    table: {\r\n        //width: \"100%\"\r\n    },\r\n    visuallyHidden: {\r\n        border: 0,\r\n        clip: \"rect(0 0 0 0)\",\r\n        height: 1,\r\n        margin: -1,\r\n        overflow: \"hidden\",\r\n        padding: 0,\r\n        position: \"absolute\",\r\n        top: 20,\r\n        width: 1\r\n    },\r\n    root: { \r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height:'100%'\r\n    },\r\n}));\r\n\r\nexport default function ListGroup(props) {\r\n\r\n    const {itemsMap,removeItem} =props;\r\n    const itemsList=[...itemsMap.values()];\r\n    const classes = tableStyles();\r\n    //const [selected, setSelected] = React.useState([]);\r\n    const [dense, setDense] = React.useState(false);\r\n    const [selected,setSelected]=React.useState(new Map());\r\n\r\n    /*\r\n    const handleClick = (event, name) => {\r\n        const selectedIndex = selected.indexOf(name);\r\n        let newSelected = [];\r\n\r\n        if (selectedIndex === -1) {\r\n            newSelected = newSelected.concat(selected, name);\r\n        } else if (selectedIndex === 0) {\r\n            newSelected = newSelected.concat(selected.slice(1));\r\n        } else if (selectedIndex === selected.length - 1) {\r\n            newSelected = newSelected.concat(selected.slice(0, -1));\r\n        } else if (selectedIndex > 0) {\r\n            newSelected = newSelected.concat(\r\n                selected.slice(0, selectedIndex),\r\n                selected.slice(selectedIndex + 1)\r\n            );\r\n        }\r\n        setSelected(newSelected);\r\n    };\r\n    */\r\n\r\n    const deleteSelected = (name)=>{\r\n        if (selected.delete(name)) setSelected(new Map(selected));\r\n    }\r\n\r\n    const handleClick = (event,name) => {\r\n        selected.has(name) ? deleteSelected(name) : setSelected(new Map(selected.set(name)));\r\n    }\r\n\r\n    const handleChangeDense = (event) => {\r\n        setDense(event.target.checked);\r\n    };\r\n\r\n    //const isSelected = (name) => selected.indexOf(name) !== -1;\r\n    const isSelected = (name) => selected.has(name);\r\n\r\n    return (\r\n        <div className={classes.root} >\r\n            <EnhancedTableToolbar numSelected={selected.size} selected={selected} removeItem={removeItem} deleteSelected={deleteSelected}/>\r\n            <TableContainer className={classes.container}>\r\n                <Table\r\n                    className={classes.table}\r\n                    aria-labelledby=\"tableTitle\"\r\n                    size={dense ? \"small\" : \"medium\"}\r\n                    aria-label=\"enhanced table\"\r\n                >\r\n                    <TableBody>\r\n                        {itemsList.map((row, index) => {\r\n                            const isItemSelected = isSelected(row.refno);\r\n                            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                            return (\r\n                                <TableRow\r\n                                    hover\r\n                                    onClick={(event) => handleClick(event, row.refno)}\r\n                                    role=\"checkbox\"\r\n                                    aria-checked={isItemSelected}\r\n                                    tabIndex={-1}\r\n                                    key={row.refno+row.type}\r\n                                    selected={isItemSelected}\r\n                                >\r\n                                    <TableCell padding=\"checkbox\">\r\n                                        <Checkbox\r\n                                            checked={isItemSelected}\r\n                                            inputProps={{ \"aria-labelledby\": labelId }}\r\n                                        />\r\n                                    </TableCell>\r\n                                    <TableCell\r\n                                        component=\"th\"\r\n                                        id={labelId}\r\n                                        scope=\"row\"\r\n                                        padding=\"none\"\r\n                                    >\r\n                                        {row.refno}\r\n                                    </TableCell>\r\n                                    <TableCell align=\"right\">{row.type}</TableCell>\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useState, useContext, useEffect, useMemo, useCallback, useRef } from \"react\";\r\n//import SemanticDatepicker from \"react-semantic-ui-datepickers\";\r\nimport { LoginContext } from \"./loginContext\";\r\nimport { navigate } from \"@reach/router\";\r\nimport { logoutAll, addRecord, checkItemNotReturn, getFormatToday, getFormatDate } from \"./firebase_\";\r\nimport { readTag } from \"./nfc\";\r\nimport ListGroup from \"./listgroup\";\r\n//import Location from \"./_inputLocation\";\r\n//import InputType from \"./inputType\";\r\n\r\n\r\n//import 'date-fns';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport Archive from '@material-ui/icons/Archive';\r\nimport AddAPhoto from '@material-ui/icons/AddAPhoto';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Snackbar from \"@material-ui/core/Snackbar\";\r\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\r\nimport Box from '@material-ui/core/Box';\r\nimport { flexbox } from '@material-ui/system';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardTimePicker,\r\n  KeyboardDatePicker,\r\n  DatePicker,\r\n} from '@material-ui/pickers';\r\nimport useFetch from 'use-http';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(1),\r\n    paddingRight: theme.spacing(1),\r\n    height: '92vh',\r\n    minHeight: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    \r\n    //justifyContent:'space-between'\r\n    //alignItems:'center',\r\n  },\r\n  submitButton: {\r\n    marginTop: theme.spacing(2),\r\n    marginBottom: theme.spacing(2),\r\n    width: '100%'\r\n  }\r\n}));\r\n\r\n\r\nconst InputForm = () => {\r\n  const todayString = getFormatToday();\r\n\r\n  const [login, setLogin] = useContext(LoginContext);\r\n  const [activeItem, setActiveItem] = useState(\"\");\r\n  const [itemsList, _setItemList] = useState([]);\r\n\r\n  const _itemsList = useRef(itemsList);\r\n  const setItemList = data => {\r\n    _itemsList.current = data;\r\n    _setItemList(data);\r\n  };\r\n\r\n  const ListGroupMemo=React.memo(ListGroup);\r\n\r\n  const [itemsMap,setItemsMap]=useState(new Map());\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [errorMessageVisible, setErrorMessageVisible] = useState(false);\r\n\r\n  const setError = useCallback((message) => {\r\n    setErrorMessage(message);\r\n    setErrorMessageVisible(true);\r\n  }, [])\r\n\r\n\r\n  // old array code\r\n  /*\r\n  const removeItem = index => {\r\n    itemsList.splice(index, 1);\r\n    const tempList = [...itemsList];\r\n    //_itemsList.current=tempList; \r\n    setItemList(tempList);\r\n  }\r\n  */\r\n\r\n  const removeItem =key =>{\r\n    if (itemsMap.delete(key)) setItemsMap(new Map(itemsMap));\r\n  }\r\n\r\n  const addItem = (dataString) => {\r\n    //const decoder = new TextDecoder();\r\n    // for (const record of event.message.records) {\r\n    //setNfcMessage(\"Record type:  \" + record.recordType);\r\n    //setNfcMessage(\"MIME type:    \" + record.mediaType);\r\n    //setNfcMessage(\"=== data ===\\n\" + decoder.decode(record.data));\r\n    // }\r\n    //setNfcMessage('tempItemsList.length '+event.itemsList.length);\r\n    //const tempArray = decoder.decode(event.message.records[0].data).split(\",\");\r\n    const tempArray = dataString.split(\",\");\r\n    const tempObject = { 'refno': tempArray[0], 'type': tempArray[1], 'desc': '', 'dbRefNo': '' };\r\n    // old array code   const tempList = [..._itemsList.current,tempObject];\r\n    // old array code   setItemList(tempList);\r\n    setItemsMap(new Map(itemsMap.set(tempArray[0],tempObject)));                        \r\n    console.log(itemsMap);\r\n    /*\r\n    checkItemNotReturn(tempArray[0]).then(result => {\r\n      if (result) {\r\n        const [nonReturnDbRefNo, nonReturnItemRefno, nonReturnItemData] = result;\r\n        _itemsList.current.forEach(item => {\r\n          if (item.refno == nonReturnItemRefno) {\r\n            item.desc = `應未歸還: ${nonReturnItemData.borrower} (${getFormatDate(nonReturnItemData.borrow_date.toDate())})`;\r\n            item.dbRefNo = nonReturnDbRefNo;\r\n          }\r\n        })\r\n        const tempList = [..._itemsList.current];\r\n        setItemList(tempList);\r\n      }\r\n    })*/\r\n  }\r\n\r\n  const submit = () => {r\n    //if (itemsList.length === 0) setError(\"😫 錯誤 : 請輸入租借物件\");\r\n    //addRecord(borrowerName, new Date(rentDate), new Date(expectReturnDate), location, itemsList, setError)\r\n    // }\r\n  }\r\n\r\n  const logoutAllFunction = () => {\r\n    setActiveItem(\"logout\");\r\n    logoutAll();\r\n    navigate(\"/\");\r\n  };\r\n\r\n  if (login == null) navigate(\"/\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"inputForm_useEffect\");\r\n    readTag(setError, addItem);\r\n  }, []);\r\n\r\n  /*\r\n  useEffect(() => {\r\n    console.log(\"inputForm_useEffect2\");\r\n    const messageTimeout = setTimeout(() => {\r\n      setErrorMessageVisible(false);\r\n    }, 3000)\r\n    return (() => {\r\n      console.log(\"InputForm_useEffect2_return\");\r\n      clearTimeout(messageTimeout);\r\n    })\r\n  }, [nfcMessageVisible, nfcMessage]);\r\n*/\r\n\r\n  const classes = useStyles();\r\n  const todayDate = new Date(new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate()));\r\n\r\n\r\n  const initObject = {borrowerName:\"\",location:\"\", itemType:\"\",\r\n  itemInput:\"\",selectBorrowDate:todayDate,predictReturnDate:todayDate}; \r\n\r\n  const [submitObject,setSubmitObject] = useState(initObject);\r\n  const {borrowerName,location,itemType,itemInput,selectBorrowDate,predictReturnDate}=submitObject;\r\n\r\n\r\n/*\r\n  const [groupNo, setGroupNo] = useState(\"\");\r\n  const [borrowerName, setBorrowerName] = useState(\"\");\r\n  // const [locationOpen, setLocationOpen] = useState(false);\r\n  const [location, setLocation] = useState(\"\");\r\n  //const [itemTypeOpen, setItemTypeOpen] = useState(false);\r\n  const [itemType, setItemType] = useState(\"\");\r\n  const [itemInput, setItemInput] = useState(\"\");\r\n  \r\n  const [selectBorrowDate, setSelectBorrowDate] = useState(todayDate);\r\n  const [predictReturnDate, setPredictReturnDate] = useState(todayDate);\r\n  //const { loading, error, data = [] } = useFetch('data.json',[]);\r\n  */\r\n\r\n  const [selectLocation, setSelectLocation] = useState([]);\r\n  const [selectType, setSelectType] = useState([]);\r\n  const { get, post, response, loading, error } = useFetch('.')\r\n  const [fetchPath, setFetchPath] = useState('/data.json');\r\n\r\n  const borrowerNameChange = (event, value) => {\r\n    //setBorrowerName(value);\r\n    setSubmitObject({\r\n      ...submitObject,\r\n      borrowerName:value,\r\n    })\r\n  };\r\n  /*\r\n    const localtionHandle = () => {\r\n      setLocationOpen(!locationOpen);\r\n    };\r\n    */\r\n  const locationChange = (event) => {\r\n    //setLocation(event.target.value);\r\n    setSubmitObject({\r\n      ...submitObject,\r\n      location:event.target.value,\r\n    })\r\n  };\r\n  /*\r\n    const itemTypeHandle = () => {\r\n      setItemTypeOpen(!itemTypeOpen);\r\n    };\r\n    */\r\n\r\n  const itemTypeChange = (event) => {\r\n    //setItemType(event.target.innerText || event.target.value)\r\n    setSubmitObject({\r\n      ...submitObject,\r\n      itemType:event.target.innerText || event.target.value,\r\n    })\r\n  }\r\n\r\n  useEffect(() => { initSelect() }, [fetchPath])\r\n\r\n  async function initSelect() {\r\n    const initSelectData = await get(fetchPath);\r\n    if (response.ok) {\r\n      //console.log(initSelectData.groups);\r\n      setSelectLocation(initSelectData.location);\r\n      setSelectType(initSelectData.type);\r\n      //console.log(\"selectBorrowDate\",selectBorrowDate);\r\n    }\r\n  }\r\n\r\n  const inputListFunction = () => {\r\n    if (itemInput && itemType) {\r\n      //console.log(`${itemInput},${itemType}`);\r\n      addItem(`${itemInput},${itemType}`);\r\n    } else {\r\n      setError(\"請輸入 租借物件編號 及 租借種類\");\r\n    }\r\n  }\r\n\r\n  const itemInputFunction = (event) => {\r\n    //setItemInput(event.target.value);\r\n    setSubmitObject({...submitObject, itemInput:event.target.value});\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div style={{ display: 'flex', flexDirection: 'column'}}>\r\n\r\n        <Snackbar open={errorMessageVisible} autoHideDuration={3000} onClose={()=>{setErrorMessageVisible(false)}}>\r\n          <SnackbarContent style={{ backgroundColor: 'orange', fontSize:'1rem' }} message={errorMessage} />\r\n        </Snackbar>\r\n\r\n        <Typography variant=\"h6\" gutterBottom color=\"primary\">\r\n          租借登記頁\r\n        </Typography>\r\n\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={6}>\r\n            <TextField onChange={borrowerNameChange} label=\"租借者姓名\" id=\"borrower\" margin=\"none\" fullWidth required>\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={6}>\r\n            <Autocomplete\r\n              id=\"location\"\r\n              freeSolo\r\n              options={selectLocation.map((sLocation) => sLocation)}\r\n              onInputChange={locationChange}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"地點\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n            <Grid item xs={6}>\r\n              <DatePicker\r\n                autoOk\r\n                variant=\"dialog\"\r\n                label=\"租借日期\"\r\n                fullWidth\r\n                disableFuture\r\n                format=\"dd/MM/yyyy\"\r\n                value={selectBorrowDate}\r\n                onChange={//setSelectBorrowDate\r\n                  (arg)=>setSubmitObject({...submitObject,selectBorrowDate:arg})\r\n                }\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <DatePicker\r\n                autoOk\r\n                variant=\"dialog\"\r\n                label=\"預期歸還日期\"\r\n                format=\"dd/MM/yyyy\"\r\n                fullWidth\r\n                disablePast\r\n                value={predictReturnDate}\r\n                onChange={//setPredictReturnDate\r\n                  (arg)=>setSubmitObject({...submitObject,predictReturnDate:arg})\r\n                }\r\n              />\r\n            </Grid>\r\n          </MuiPickersUtilsProvider>\r\n          <Grid item xs={5}>\r\n            <TextField onChange={itemInputFunction} label=\"租借物件編號\" id=\"rentItem\" margin=\"none\" fullWidth required>\r\n            </TextField>\r\n          </Grid>\r\n          <Grid item xs={5}>\r\n            <Autocomplete\r\n              id=\"itemType\"\r\n              freeSolo\r\n              options = {selectType} // {selectType.map((type) => type)}\r\n              onInputChange={itemTypeChange}\r\n              renderInput={(params) => (\r\n                <TextField {...params} label=\"租借種類\" margin=\"none\" />\r\n              )}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Grid container\r\n              direction=\"row\"\r\n              justify=\"space-evenly\"\r\n              alignItems=\"center\"\r\n            >\r\n              <IconButton onClick={inputListFunction} color=\"primary\" aria-label=\"plus\">\r\n                <Archive fontSize=\"large\" />\r\n              </IconButton>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n      <div style={{ display: 'flex', flexDirection: 'column', flex: '1' }}>\r\n        <ListGroupMemo itemsMap={itemsMap} removeItem={removeItem}/> \r\n      </div>\r\n      <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n        <Button variant=\"contained\" color=\"primary\" className={classes.submitButton} type=\"submit\">確定</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputForm;\r\n","export const readTag = (setMessage,addItem)=> {\r\n    if (\"NDEFReader\" in window) {\r\n          /*global NDEFReader*/\r\n      const reader = new NDEFReader();\r\n      try {\r\n        reader.scan();\r\n        const decoder = new TextDecoder();\r\n        reader.onreading = event => {\r\n          addItem(decoder.decode(event.message.records[0].data));\r\n        }\r\n      } catch(error) {\r\n        setMessage(error.message);\r\n      }\r\n    } else {\r\n        setMessage(\"😫 錯誤 : Web NFC 未能支援\");\r\n    }\r\n  } \r\n/*\r\n  export const readTag = (setMessage,addItem) => {\r\n    if (\"NDEFReader\" in window) {\r\n          /*global NDEFReader*//*\r\n      const reader = new NDEFReader();\r\n      try {\r\n        reader.scan();\r\n        reader.onreading = event => {\r\n          const decoder = new TextDecoder();\r\n          addItem(decoder.decode(event.message.records[0].data));\r\n        }\r\n      } catch(error) {\r\n        setMessage(error.message);\r\n        return \"error\";\r\n      }\r\n    } else {\r\n        setMessage(\"Web NFC 未能支援\");\r\n    }\r\n  }\r\n  */\r\n export async function writeTag() {\r\n    if (\"NDEFWriter\" in window) {\r\n          /*global NDEFWriter*/\r\n      const writer = new NDEFWriter();\r\n      try {\r\n        await writer.write(\"What Web Can Do Today\");\r\n        consoleLog(\"NDEF message written!\");\r\n      } catch(error) {\r\n        consoleLog(error);\r\n      }\r\n    } else {\r\n      consoleLog(\"Web NFC is not supported.\");\r\n    }\r\n  }\r\n  \r\n  function consoleLog(data) {\r\n    var logElement = document.getElementById('log');\r\n    logElement.innerHTML += data + '\\n';\r\n  }","import React , {useEffect, useState } from 'react';\r\nimport { Button } from '@material-ui/core';\r\n\r\nconst ReturnForm=()=> {\r\n  return <Button color=\"primary\">Hello World</Button>;\r\n}\r\n\r\nexport default ReturnForm;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport InputForm from \"./inputForm\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/Grid\";\r\nimport AccountBox from '@material-ui/icons/AccountBox';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`simple-tabpanel-${index}`}\r\n            aria-labelledby={`simple-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box>\r\n                    {children}\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `simple-tab-${index}`,\r\n        \"aria-controls\": `simple-tabpanel-${index}`\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        height: '8vh',\r\n        backgroundColor: theme.palette.background.paper\r\n\r\n    },\r\n    toolbar: {\r\n        justifyContent: \"space-between\",\r\n    }\r\n}));\r\n\r\nexport default function SwitchPage() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        //console.log(newValue);\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar className={classes.toolbar}>\r\n                    <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        aria-label=\"Tabs\"\r\n                    >\r\n                        <Tab label=\"租借登記頁\" {...a11yProps(0)} />\r\n                        <Tab label=\"Item Two\" {...a11yProps(1)} />\r\n                        <Tab label=\"Item Three\" {...a11yProps(2)} />\r\n                    </Tabs>\r\n                    <IconButton aria-label=\"account\">\r\n                        <AccountBox />\r\n                    </IconButton>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <TabPanel value={value} index={0}>\r\n                <InputForm />\r\n            </TabPanel>\r\n            <TabPanel value={value} index={1}>\r\n                Item Two\r\n      </TabPanel>\r\n            <TabPanel value={value} index={2}>\r\n                Item Three\r\n      </TabPanel>\r\n        </div>\r\n    );\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport { LoginContext } from \"./loginContext\";\r\nimport LoginForm from \"./loginForm\";\r\nimport InputForm from \"./inputForm\";\r\nimport ReturnForm from \"./returnForm\";\r\nimport SwitchPage from \"./switch_page\";\r\nimport { Router,navigate } from \"@reach/router\";\r\n\r\nconst MainPage = props => {\r\n  const [login, setLogin] = useContext(LoginContext);\r\n\r\n  return (\r\n    <Router /*basepath=\"/inventory\"*/>\r\n      {/*login.user === false && <LoginForm />*/}\r\n      {/*login.user === true && <InputForm />*/}\r\n      <LoginForm path=\"/\" />\r\n      <SwitchPage path=\"/switch\" />\r\n      <InputForm path=\"/input\" />\r\n      <ReturnForm path=\"/return\" />\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\nimport LoginContextProvider from \"./loginContext\";\r\nimport MainPage from \"./mainPage\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst App = () => {\r\n  return (\r\n    <CssBaseline>\r\n    <LoginContextProvider>\r\n      <Helmet>\r\n        <meta charSet=\"utf-8\" />\r\n        <title>Inventy</title>\r\n        <meta name=\"viewport\" content=\"minimum-scale=1, initial-scale=1, width=device-width\" />\r\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\" />\r\n        <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\" />\r\n      </Helmet>\r\n      <MainPage />\r\n    </LoginContextProvider>\r\n    </CssBaseline>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n//import \"react-semantic-ui-datepickers/dist/react-semantic-ui-datepickers.css\";\r\n\r\nconst styleLink = document.createElement(\"link\");\r\nstyleLink.rel = \"stylesheet\";\r\nstyleLink.href =\r\n  \"https://cdn.jsdelivr.net/npm/semantic-ui/dist/semantic.min.css\";\r\ndocument.head.appendChild(styleLink);\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}